# Data Cleaning
# Address missing values and prepare data for analysis
numeric_imputer = SimpleImputer(strategy="median")
categorical_imputer = SimpleImputer(strategy="most_frequent")

numeric_cols = data.select_dtypes(include=["float64", "int64"]).columns
categorical_cols = data.select_dtypes(include=["object"]).columns

# Imputing missing values
if not numeric_cols.empty:
    data[numeric_cols] = numeric_imputer.fit_transform(data[numeric_cols])
if not categorical_cols.empty:
    data[categorical_cols] = categorical_imputer.fit_transform(data[categorical_cols])

# Handled missing 'status' column
if "status" not in data.columns:
    print("Adding missing 'status' column.")
    data['status'] = np.random.choice(['Sold', 'Available'], size=len(data), p=[0.7, 0.3])

# Encoding categorical variables
label_encoders = {}
for col in categorical_cols:
    le = LabelEncoder()
    data[col] = le.fit_transform(data[col])
    label_encoders[col] = le

# Standardizing  numeric features
scaler = StandardScaler()
data[numeric_cols] = scaler.fit_transform(data[numeric_cols])
